import telebot
import requests
import tkn
import datetime
from currency import gbp, usd, eur
from crypto import btc, eth, doge
from cbrf.models import DailyCurrenciesRates

bot = telebot.TeleBot(tkn.token)
time = datetime.datetime.today().strftime("%d/%m/%Y  %H:%M ")
daily = DailyCurrenciesRates()


# –ö–æ–º–∞–Ω–¥–∞ /start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
@bot.message_handler(commands=["start"])
def handle_start(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(True, False)
    keyboard.row("–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ üì∞",)
    keyboard.row("–ö—É—Ä—Å –≤–∞–ª—é—Ç –¶–ë –†–§ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üìà", "–ö—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üìà")
    bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ, "
                                           "–ª–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥", reply_markup=keyboard)


# –ö–æ–º–∞–Ω–¥–∞ /help - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
@bot.message_handler(commands=["help"])
def handle_help(message):
    bot.send_message(message.from_user.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–º–∞–Ω–¥—ã:\n\n"
                                               "/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n"
                                               "/usd, /eur, /gbp - –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"
                                               "/btc, /eth, /doge - –∫—É—Ä—Å –∫—Ä–∏–ø—Ä—Ç–æ–≤–∞–ª—é—Ç—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"
                                               "/usdrub, /eurrub, /gbprub - –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç")


# –ö–æ–º–∞–Ω–¥–∞ /list - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ–π –¥–æ—Å—Ç—É–ø–æ–Ω–æ–π –≤–∞–ª—é—Ç—ã –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
@bot.message_handler(commands=["list"])
def handle_list(message):
    bot.send_message(message.from_user.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:\n\n"
                                           "USD - –¥–æ–ª–ª–∞—Ä –°–®–ê\n"
                                           "EUR - –µ–≤—Ä–æ\n"
                                           "GBP - –ë—Ä–∏—Ç–∞–Ω—Å–∫–∏–π —Ñ—É–Ω—Ç\n\n"
                                           "–î–æ—Å—Ç—É–ø–Ω–∞—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞:\n\n"
                                           "BTC - –±–∏—Ç–∫–æ–∏–Ω\n"
                                           "ETH - —ç—Ñ–∏—Ä\n"
                                           "DOGE - –¥–æ–≥–∏")


# –ó–∞–ø—É—Å–∫ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞
@bot.message_handler(commands=["usdrub"])
def usdrub(message):
    send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ USD, —á—Ç–æ–±—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –≤ RUB")
    bot.register_next_step_handler(send, value)


def value(message):
    count = message.text
    usdconv = daily.get_by_id('R01235').value
    usdconv = float(usdconv)
    while True:
        try:
            bot.send_message(message.chat.id, "–°—É–º–º–∞ –≤ USD –±—É–¥–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å {count} RUB".format(
                count=float(count) * usdconv))
        except:
            bot.send_message(message.chat.id, '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∏–º–µ–Ω–Ω–æ —á–∏—Å–ª–æ')
        finally:
            break


@bot.message_handler(commands=["eurrub"])
def eurrub(message):
    send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ EUR, —á—Ç–æ–±—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –≤ RUB")
    bot.register_next_step_handler(send, value1)


def value1(message):
    count1 = message.text
    eurconv = daily.get_by_id('R01239').value
    eurconv = float(eurconv)
    while True:
        try:
            bot.send_message(message.chat.id, "–°—É–º–º–∞ –≤ EUR –±—É–¥–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å {count1} RUB" .format(
                count1=float(count1) * eurconv))
        except:
            bot.send_message(message.chat.id, '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∏–º–µ–Ω–Ω–æ —á–∏—Å–ª–æ')
        finally:
            break


@bot.message_handler(commands=["gbprub"])
def gbprub(message):
    send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ GBP, —á—Ç–æ–±—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –≤ RUB")
    bot.register_next_step_handler(send, value2)


def value2(message):
    count2 = message.text
    gbpconv = daily.get_by_id('R01035').value
    gbpconv = float(gbpconv)
    while True:
        try:
            bot.send_message(message.chat.id, "–°—É–º–º–∞ –≤ EUR –±—É–¥–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å {count2} RUB".format(
                count2=float(count2) * gbpconv))
        except:
            bot.send_message(message.chat.id, '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∏–º–µ–Ω–Ω–æ —á–∏—Å–ª–æ')
        finally:
            break


# –ö–æ–º–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç
@bot.message_handler(commands=["usd"])
def handle_usd(message):
    bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 USD —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(usd) + " RUB")


@bot.message_handler(commands=["eur"])
def handle_eur(message):
    bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 EUR —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(eur) + " RUB")


@bot.message_handler(commands=["gbp"])
def handle_gbp(message):
    bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 GBP —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(gbp) + " RUB")


# –ö–æ–º–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
@bot.message_handler(commands=["btc"])
def handle_btc(message):
    bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 BTC —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(btc()) + " USD")


@bot.message_handler(commands=["eth"])
def handle_eth(message):
    bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 ETH —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(eth()) + " USD")


@bot.message_handler(commands=["doge"])
def handle_doge(message):
    bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 DOGE —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(doge()) + " USD")


# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
@bot.message_handler(content_types=["text"])
def handle_text(message):
    if message.text == "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ üì∞":
        url = "https://news.yandex.ru/finances.html"
        requests.get(url)
        bot.send_message(message.from_user.id, url)
    elif message.text == "–ö—É—Ä—Å –≤–∞–ª—é—Ç –¶–ë –†–§ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üìà":
        keyboard1 = telebot.types.ReplyKeyboardMarkup(True)
        keyboard1.row("USD üá∫üá∏", "GBP üá¨üáß", "EUR üá™üá∫")
        keyboard1.row("üîô –ù–∞–∑–∞–¥")
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É", reply_markup=keyboard1)
    elif message.text == "USD üá∫üá∏":
        bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 USD —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(usd) + " RUB")
    elif message.text == "GBP üá¨üáß":
        bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 GBP —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(gbp) + " RUB")
    elif message.text == "EUR üá™üá∫":
        bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 EUR —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(eur) + " RUB")
    elif message.text == "üîô –ù–∞–∑–∞–¥":
        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.row("–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ üì∞", )
        keyboard.row("–ö—É—Ä—Å –≤–∞–ª—é—Ç –¶–ë –†–§ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üìà", "–ö—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üìà")
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å–≤—Ç–∏–µ", reply_markup=keyboard)
    elif message.text == "–ö—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üìà":
        keyboard2 = telebot.types.ReplyKeyboardMarkup(True)
        keyboard2.row("BTC", "ETH", "DOGE")
        keyboard2.row("üîô –ù–∞–∑–∞–¥")
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É", reply_markup=keyboard2)
    elif message.text == "BTC":
        bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 BTC —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(btc()) + " USD")
    elif message.text == "ETH":
        bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 ETH —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(eth()) + " USD")
    elif message.text == "DOGE":
        bot.send_message(message.from_user.id, "–ù–∞ " + str(time) + " —Ü–µ–Ω–∞ 1 DOGE —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(doge()) + " USD")
    elif message.text == "üîô –ù–∞–∑–∞–¥":
        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.row("–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ üì∞", )
        keyboard.row("–ö—É—Ä—Å –≤–∞–ª—é—Ç –¶–ë –†–§ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üìà", "–ö—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üìà")
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å–≤—Ç–∏–µ", reply_markup=keyboard)


# –±–µ—Å–ø—Ä–µ—Ä—ã–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å–∫—Ä–∏–ø—Ç–∞
bot.polling(none_stop=True, interval=0)
